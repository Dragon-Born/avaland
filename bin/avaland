#!/usr/bin/env python

import argparse

from avaland.manager import SourceManager
from avaland.sources import *

parser = argparse.ArgumentParser(description='Avaland Music Downloader')
parser.add_argument("query", type=str, help='search query')
parser.add_argument("--path", type=str, help='path to download')
parser.add_argument("--sources", type=str, help='list of sources (default: --sources bia2,next1,rapfarsi)')

args = parser.parse_args()


def print_result(source, data, counter):
    print(source.title(), "results: ")
    if data.record_count == 0:
        print("\t", "Nothing!\n")
        return counter

    for i in data.to_dict().keys():
        for j in range(3):
            if len(data.to_dict()[i]) - 1 < j:
                break
            if i == 'musics':
                print("\t", "%s- [%s]" % (counter, i), " -> ", data.musics[j].full_title)
                items.append(data.musics[j])
            elif i == 'albums':
                print("\t", "%s- [%s]" % (counter, i), " -> ", data.albums[j].full_title)
                items.append(data.albums[j])
            elif i == 'artists':
                print("\t", "%s- [%s]" % (counter, i), " -> ", data.artists[j].full_name)
                items.append(data.artists[j])
            counter += 1
            print()

    return counter


if __name__ == '__main__':
    items = []
    counter = 1
    manager = SourceManager()
    manager.register(Bia2)
    manager.register(Nex1)
    manager.register(RapFarsi)
    manager.register(Navahang)
    manager.register(RadioJavan)
    manager.register(WikiSeda)
    search = manager.search(args.query)
    for source in search.keys():
        counter = print_result(source, search[source], counter)
    _input = input("Select an item to download (q for exit): ")
    if _input == "q":
        exit()
    while (not _input.isdigit()) or len(items) < int(_input) or int(_input) < 1:
        _input = input("(Invalid!) Select an item to download (q for exit): ")
        if _input == "q":
            exit()
    if type(items[int(_input) - 1]).__name__ != 'Music':
        print("Planned for future...")
        exit()

    items[int(_input) - 1].download(args.path)
